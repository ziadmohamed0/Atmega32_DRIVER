Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o (exit)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
                              ./Hall/BCD/bcd_Prog.o (__tablejump2__)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                              ./Mcal/DIO/dio_Prog.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                              ./Hall/DC_Motor/Dc_Motor_Prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000004000 xr
data             0x0000000000800060 0x0000000000000400 rw !x
eeprom           0x0000000000810000 0x0000000000000200 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
LOAD ./Mcal/DIO/dio_Prog.o
LOAD ./Hall/Led/Led_Prog.o
LOAD ./Hall/LCD/Lcd_Config.o
LOAD ./Hall/LCD/Lcd_Prog.o
LOAD ./Hall/DC_Motor/Dc_Motor_Config.o
LOAD ./Hall/DC_Motor/Dc_Motor_Prog.o
LOAD ./Hall/BCD/bcd_Config.o
LOAD ./Hall/BCD/bcd_Prog.o
LOAD ./App/Main_Prog.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800060]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x0000000000004000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x0000000000000400]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x0000000000000200]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xd54
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.Bcd_7segWriteNum
                0x0000000000000054       0x14 ./Hall/BCD/bcd_Prog.o
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6        0x0 ./Mcal/DIO/dio_Prog.o
 .text          0x00000000000000a6        0x0 ./Hall/Led/Led_Prog.o
 .text          0x00000000000000a6        0x0 ./Hall/LCD/Lcd_Config.o
 .text          0x00000000000000a6        0x0 ./Hall/LCD/Lcd_Prog.o
 .text          0x00000000000000a6        0x0 ./Hall/DC_Motor/Dc_Motor_Config.o
 .text          0x00000000000000a6        0x0 ./Hall/DC_Motor/Dc_Motor_Prog.o
 .text          0x00000000000000a6        0x0 ./Hall/BCD/bcd_Config.o
 .text          0x00000000000000a6        0x0 ./Hall/BCD/bcd_Prog.o
 .text          0x00000000000000a6        0x0 ./App/Main_Prog.o
 .text          0x00000000000000a6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000000a6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text          0x00000000000000a6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000000a6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.Dio_setPinDir
                0x00000000000000a6       0xe4 ./Mcal/DIO/dio_Prog.o
                0x00000000000000a6                Dio_setPinDir
 .text.Dio_setPinVal
                0x000000000000018a      0x14a ./Mcal/DIO/dio_Prog.o
                0x000000000000018a                Dio_setPinVal
 .text.Dio_getPinVal
                0x00000000000002d4       0x54 ./Mcal/DIO/dio_Prog.o
                0x00000000000002d4                Dio_getPinVal
 .text.Dio_setPortDir
                0x0000000000000328       0x34 ./Mcal/DIO/dio_Prog.o
                0x0000000000000328                Dio_setPortDir
 .text.Dio_setPortVal
                0x000000000000035c       0x34 ./Mcal/DIO/dio_Prog.o
                0x000000000000035c                Dio_setPortVal
 .text.Dio_getPortVal
                0x0000000000000390       0x34 ./Mcal/DIO/dio_Prog.o
                0x0000000000000390                Dio_getPortVal
 .text.Led_On_PortLeds_Button
                0x00000000000003c4       0x5c ./Hall/Led/Led_Prog.o
                0x00000000000003c4                Led_On_PortLeds_Button
 .text.Led_On_OneLed_Button
                0x0000000000000420       0x5c ./Hall/Led/Led_Prog.o
                0x0000000000000420                Led_On_OneLed_Button
 .text.Motor_Init
                0x000000000000047c       0x4c ./Hall/DC_Motor/Dc_Motor_Prog.o
                0x000000000000047c                Motor_Init
 .text.Motor_Forward
                0x00000000000004c8       0xbc ./Hall/DC_Motor/Dc_Motor_Prog.o
                0x00000000000004c8                Motor_Forward
 .text.Motor_Reverse
                0x0000000000000584       0xbc ./Hall/DC_Motor/Dc_Motor_Prog.o
                0x0000000000000584                Motor_Reverse
 .text.Motor_Off
                0x0000000000000640       0xbc ./Hall/DC_Motor/Dc_Motor_Prog.o
                0x0000000000000640                Motor_Off
 .text.Bcd_7segInit
                0x00000000000006fc       0x44 ./Hall/BCD/bcd_Prog.o
                0x00000000000006fc                Bcd_7segInit
 .text.Bcd_7segWriteNum
                0x0000000000000740      0x1ac ./Hall/BCD/bcd_Prog.o
                0x0000000000000740                Bcd_7segWriteNum
 .text.Bcd_MPX_2Enable
                0x00000000000008ec       0x98 ./Hall/BCD/bcd_Prog.o
                0x00000000000008ec                Bcd_MPX_2Enable
 .text.Bcd_MPX_4Enable
                0x0000000000000984       0xe2 ./Hall/BCD/bcd_Prog.o
                0x0000000000000984                Bcd_MPX_4Enable
 .text.Bcd_MPX_6Enable
                0x0000000000000a66      0x130 ./Hall/BCD/bcd_Prog.o
                0x0000000000000a66                Bcd_MPX_6Enable
 .text.Bcd_MPX_8Enable
                0x0000000000000b96      0x17c ./Hall/BCD/bcd_Prog.o
                0x0000000000000b96                Bcd_MPX_8Enable
 .text.main     0x0000000000000d12       0x12 ./App/Main_Prog.o
                0x0000000000000d12                main
 .text.Inzalizations
                0x0000000000000d24       0x10 ./App/Main_Prog.o
                0x0000000000000d24                Inzalizations
 .text.ProgLoop
                0x0000000000000d34       0x10 ./App/Main_Prog.o
                0x0000000000000d34                ProgLoop
 .text.libgcc.mul
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000000d44        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000000d44        0xc /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
                0x0000000000000d44                __tablejump2__
 .text.libgcc.prologue
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000d50                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000d50        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                0x0000000000000d50                exit
                0x0000000000000d50                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000d50        0x4 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000d54                _etext = .

.data           0x0000000000800060       0x28 load address 0x0000000000000d54
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 .data          0x0000000000800060        0x0 ./Mcal/DIO/dio_Prog.o
 .data          0x0000000000800060        0x0 ./Hall/Led/Led_Prog.o
 .data          0x0000000000800060        0x0 ./Hall/LCD/Lcd_Config.o
 .data          0x0000000000800060        0x0 ./Hall/LCD/Lcd_Prog.o
 .data          0x0000000000800060        0x0 ./Hall/DC_Motor/Dc_Motor_Config.o
 .data          0x0000000000800060        0x0 ./Hall/DC_Motor/Dc_Motor_Prog.o
 .data          0x0000000000800060        0x0 ./Hall/BCD/bcd_Config.o
 .data          0x0000000000800060        0x0 ./Hall/BCD/bcd_Prog.o
 .data          0x0000000000800060        0x0 ./App/Main_Prog.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.Arr_DDr  0x0000000000800060        0x8 ./Mcal/DIO/dio_Prog.o
                0x0000000000800060                Arr_DDr
 .data.Arr_Port
                0x0000000000800068        0x8 ./Mcal/DIO/dio_Prog.o
                0x0000000000800068                Arr_Port
 .data.Arr_Pin  0x0000000000800070        0x8 ./Mcal/DIO/dio_Prog.o
                0x0000000000800070                Arr_Pin
 .data.m1       0x0000000000800078        0x4 ./Hall/DC_Motor/Dc_Motor_Config.o
                0x0000000000800078                m1
 .data.m2       0x000000000080007c        0x4 ./Hall/DC_Motor/Dc_Motor_Config.o
                0x000000000080007c                m2
 .data.Seg_1    0x0000000000800080        0x4 ./Hall/BCD/bcd_Config.o
                0x0000000000800080                Seg_1
 .data.MX_1     0x0000000000800084        0x4 ./Hall/BCD/bcd_Config.o
                0x0000000000800084                MX_1
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800088                . = ALIGN (0x2)
                0x0000000000800088                _edata = .
                0x0000000000800088                PROVIDE (__data_end, .)

.bss            0x0000000000800088        0x0
                0x0000000000800088                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 .bss           0x0000000000800088        0x0 ./Mcal/DIO/dio_Prog.o
 .bss           0x0000000000800088        0x0 ./Hall/Led/Led_Prog.o
 .bss           0x0000000000800088        0x0 ./Hall/LCD/Lcd_Config.o
 .bss           0x0000000000800088        0x0 ./Hall/LCD/Lcd_Prog.o
 .bss           0x0000000000800088        0x0 ./Hall/DC_Motor/Dc_Motor_Config.o
 .bss           0x0000000000800088        0x0 ./Hall/DC_Motor/Dc_Motor_Prog.o
 .bss           0x0000000000800088        0x0 ./Hall/BCD/bcd_Config.o
 .bss           0x0000000000800088        0x0 ./Hall/BCD/bcd_Prog.o
 .bss           0x0000000000800088        0x0 ./App/Main_Prog.o
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800088        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800088                PROVIDE (__bss_end, .)
                0x0000000000000d54                __data_load_start = LOADADDR (.data)
                0x0000000000000d7c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800088        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800088                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x3420
 *(.stab)
 .stab          0x0000000000000000      0x810 ./Mcal/DIO/dio_Prog.o
 .stab          0x0000000000000810      0x4f8 ./Hall/Led/Led_Prog.o
                                        0x69c (size before relaxing)
 .stab          0x0000000000000d08      0x3c0 ./Hall/LCD/Lcd_Config.o
                                        0x564 (size before relaxing)
 .stab          0x00000000000010c8      0x2d0 ./Hall/LCD/Lcd_Prog.o
                                        0x564 (size before relaxing)
 .stab          0x0000000000001398      0x3f0 ./Hall/DC_Motor/Dc_Motor_Config.o
                                        0x594 (size before relaxing)
 .stab          0x0000000000001788      0x654 ./Hall/DC_Motor/Dc_Motor_Prog.o
                                        0x90c (size before relaxing)
 .stab          0x0000000000001ddc      0x42c ./Hall/BCD/bcd_Config.o
                                        0x5d0 (size before relaxing)
 .stab          0x0000000000002208      0xcc0 ./Hall/BCD/bcd_Prog.o
                                        0xfb4 (size before relaxing)
 .stab          0x0000000000002ec8      0x558 ./App/Main_Prog.o
                                        0x6fc (size before relaxing)

.stabstr        0x0000000000000000     0x2327
 *(.stabstr)
 .stabstr       0x0000000000000000     0x2327 ./Mcal/DIO/dio_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./Mcal/DIO/dio_Prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./Hall/Led/Led_Prog.o
 .comment       0x0000000000000011       0x12 ./Hall/LCD/Lcd_Config.o
 .comment       0x0000000000000011       0x12 ./Hall/LCD/Lcd_Prog.o
 .comment       0x0000000000000011       0x12 ./Hall/DC_Motor/Dc_Motor_Config.o
 .comment       0x0000000000000011       0x12 ./Hall/DC_Motor/Dc_Motor_Prog.o
 .comment       0x0000000000000011       0x12 ./Hall/BCD/bcd_Config.o
 .comment       0x0000000000000011       0x12 ./Hall/BCD/bcd_Prog.o
 .comment       0x0000000000000011       0x12 ./App/Main_Prog.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x52e
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x52e /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.debug_abbrev   0x0000000000000000      0x4e7
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4e7 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x1af
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1af /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Driver_Atmega32.elf elf32-avr)
LOAD linker stubs
